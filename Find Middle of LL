import java.util.*;
class Node {
    int data;
    Node next;
    Node(int new_data) {
        this.data = new_data;
        this.next = null;
    }
}
public class GfG {

    // Function to find the middle element of the linked
    // list
    static int getMiddle(Node head) {
      
        // Vector to store the values of all nodes
        LinkedList<Integer> list_values = new LinkedList<>();

        // Traverse through the entire linked list and push
        // all the values into the list
        while (head != null) {
            list_values.add(head.data);
            head = head.next;
        }
      
        // Find the middle index
        int mid_index = list_values.size() / 2;
      
        // Return the value stored at the middle index
        return list_values.get(mid_index);
    }

    // Driver code
    public static void main(String[] args) {
      
        // Create a hard-coded linked list:
        // 10 -> 20 -> 30 -> 40 -> 50 -> 60 -> 70
        Node head = new Node(10);
        head.next = new Node(20);
        head.next.next = new Node(30);
        head.next.next.next = new Node(40);
        head.next.next.next.next = new Node(50);
        head.next.next.next.next.next = new Node(60);
        head.next.next.next.next.next.next = new Node(70);

        // Example of printing the middle value of the
        // linked list
        System.out.println(
            "Middle Value Of Linked List is: "
            + getMiddle(head));
    }
}
